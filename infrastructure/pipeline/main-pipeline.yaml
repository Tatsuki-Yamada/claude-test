AWSTemplateFormatVersion: '2010-09-09'
Description: 'S3 Photo Gallery CI/CD Pipeline'

Parameters:
  GitHubOwner:
    Type: String
    Default: Tatsuki-Yamada
    Description: GitHub repository owner
  
  GitHubRepo:
    Type: String
    Default: claude-test
    Description: GitHub repository name
  
  GitHubBranch:
    Type: String
    Default: main
    Description: GitHub repository branch
  
  GitHubToken:
    Type: String
    NoEcho: true
    Description: GitHub OAuth token
  
  PrerequisitesStackName:
    Type: String
    Default: s3-photo-gallery-prerequisites
    Description: Name of the prerequisite resources CloudFormation stack

Resources:
  # CodeBuild project for building and deploying the React app
  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub '${AWS::StackName}-build'
      Description: 'Build and deploy the S3 Photo Gallery React app'
      ServiceRole: 
        Fn::ImportValue: !Sub '${PrerequisitesStackName}-CodeBuildServiceRoleArn'
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        PrivilegedMode: true
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              runtime-versions:
                nodejs: 14
              commands:
                - echo Installing dependencies...
                - cd frontend
                - npm install
            build:
              commands:
                - echo Building the React application...
                - npm run build
            post_build:
              commands:
                - echo Build completed on `date`
          artifacts:
            base-directory: frontend/build
            files:
              - '**/*'
          cache:
            paths:
              - 'frontend/node_modules/**/*'
      TimeoutInMinutes: 10

  # S3バケットをデプロイするためのCodeBuildプロジェクト
  DeployS3ResourcesProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub '${AWS::StackName}-deploy-s3-resources'
      Description: 'Deploy S3 resources with CloudFormation'
      ServiceRole: 
        Fn::ImportValue: !Sub '${PrerequisitesStackName}-CodeBuildServiceRoleArn'
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        PrivilegedMode: false
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            build:
              commands:
                - echo Deploying S3 resources...
                - aws cloudformation deploy --template-file infrastructure/resources/s3-resources.yaml --stack-name ${STACK_NAME}-s3-resources --parameter-overrides StackName=${STACK_NAME} --capabilities CAPABILITY_NAMED_IAM --no-fail-on-empty-changeset
            post_build:
              commands:
                - echo S3 resources deployed
          artifacts:
            files:
              - infrastructure/resources/s3-resources.yaml
      TimeoutInMinutes: 10
      
  # ホスティングリソースをデプロイするためのCodeBuildプロジェクト
  DeployHostingResourcesProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub '${AWS::StackName}-deploy-hosting-resources'
      Description: 'Deploy hosting resources with CloudFormation'
      ServiceRole: 
        Fn::ImportValue: !Sub '${PrerequisitesStackName}-CodeBuildServiceRoleArn'
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        PrivilegedMode: false
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            build:
              commands:
                - echo Deploying hosting resources...
                - aws cloudformation deploy --template-file infrastructure/resources/hosting-resources.yaml --stack-name ${STACK_NAME}-hosting-resources --parameter-overrides StackName=${STACK_NAME} --capabilities CAPABILITY_NAMED_IAM --no-fail-on-empty-changeset
            post_build:
              commands:
                - echo Hosting resources deployed
          artifacts:
            files:
              - infrastructure/resources/hosting-resources.yaml
      TimeoutInMinutes: 10

  # S3にデプロイするためのCodeBuildプロジェクト
  DeployToS3Project:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub '${AWS::StackName}-deploy-to-s3'
      Description: 'Deploy website to S3 bucket'
      ServiceRole: 
        Fn::ImportValue: !Sub '${PrerequisitesStackName}-CodeBuildServiceRoleArn'
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        PrivilegedMode: false
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            build:
              commands:
                - echo Deploying to S3 bucket...
                - export WEBSITE_BUCKET=$(aws cloudformation describe-stacks --stack-name ${STACK_NAME}-s3-resources --query "Stacks[0].Outputs[?ExportName=='${STACK_NAME}-s3-resources-WebsiteBucketName'].OutputValue" --output text)
                - echo "Website bucket: $WEBSITE_BUCKET"
                - aws s3 sync . s3://$WEBSITE_BUCKET/ --delete
            post_build:
              commands:
                - echo Website deployed to S3
          artifacts:
            files:
              - '**/*'
      TimeoutInMinutes: 10

  # CodePipeline
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub '${AWS::StackName}-pipeline'
      RoleArn: 
        Fn::ImportValue: !Sub '${PrerequisitesStackName}-CodePipelineServiceRoleArn'
      ArtifactStore:
        Type: S3
        Location: 
          Fn::ImportValue: !Sub '${PrerequisitesStackName}-ArtifactBucketName'
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: SourceCode
        
        - Name: DeployResources
          Actions:
            # S3リソースをデプロイ
            - Name: DeployS3Resources
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref DeployS3ResourcesProject
                EnvironmentVariables: !Sub '[{"name":"STACK_NAME","value":"${AWS::StackName}","type":"PLAINTEXT"}]'
              InputArtifacts:
                - Name: SourceCode
              RunOrder: 1
            
            # ホスティングリソースをデプロイ
            - Name: DeployHostingResources
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref DeployHostingResourcesProject
                EnvironmentVariables: !Sub '[{"name":"STACK_NAME","value":"${AWS::StackName}","type":"PLAINTEXT"}]'
              InputArtifacts:
                - Name: SourceCode
              RunOrder: 2
        
        - Name: BuildAndDeploy
          Actions:
            - Name: BuildAndDeployApp
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref BuildProject
              InputArtifacts:
                - Name: SourceCode
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 1
            
            - Name: DeployToS3
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref DeployToS3Project
                EnvironmentVariables: !Sub '[{"name":"STACK_NAME","value":"${AWS::StackName}","type":"PLAINTEXT"}]'
              InputArtifacts:
                - Name: BuildOutput
              RunOrder: 2

Outputs:
  PipelineUrl:
    Description: URL to the CodePipeline console
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}
