AWSTemplateFormatVersion: '2010-09-09'
Description: 'IAM Roles for Game Collection App CI/CD'

Parameters:
  AppName:
    Type: String
    Description: 'Application name used for naming resources'
  
  Environment:
    Type: String
    Description: 'Environment (dev or prod)'

Resources:
  # CodePipeline Service Role
  CodePipelineServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub '${AppName}-${Environment}-pipeline-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AWSCodeStarFullAccess'
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:GetBucketVersioning'
                  - 's3:PutObject'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'cloudformation:CreateStack'
                  - 'cloudformation:DeleteStack'
                  - 'cloudformation:DescribeStacks'
                  - 'cloudformation:UpdateStack'
                  - 'cloudformation:CreateChangeSet'
                  - 'cloudformation:DeleteChangeSet'
                  - 'cloudformation:DescribeChangeSet'
                  - 'cloudformation:ExecuteChangeSet'
                  - 'cloudformation:SetStackPolicy'
                  - 'cloudformation:ValidateTemplate'
                  - 'cloudformation:ListStackResources'
                Resource: !Sub 'arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AppName}-${Environment}-*/*'
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                Resource: '*'
                Condition:
                  StringEqualsIfExists:
                    'iam:PassedToService':
                      - cloudformation.amazonaws.com
                      - codebuild.amazonaws.com

  # CloudFormation Service Role
  CloudFormationServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub '${AppName}-${Environment}-cloudformation-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AdministratorAccess'

  # CodeBuild Service Role
  CodeBuildServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub '${AppName}-${Environment}-codebuild-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
        - 'arn:aws:iam::aws:policy/CloudWatchLogsFullAccess'
      Policies:
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'codebuild:StartBuild'
                  - 'codebuild:BatchGetBuilds'
                Resource: '*'

  # Lambda Execution Role
  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub '${AppName}-${Environment}-lambda-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Policies:
        - PolicyName: CloudFrontAndCloudFormationAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'cloudfront:CreateInvalidation'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'cloudformation:DescribeStacks'
                Resource: '*'

Outputs:
  CodePipelineServiceRoleArn:
    Description: 'ARN of the CodePipeline service role'
    Value: !GetAtt CodePipelineServiceRole.Arn
    Export:
      Name: !Sub '${AppName}-${Environment}-CodePipelineServiceRoleArn'
  
  CloudFormationServiceRoleArn:
    Description: 'ARN of the CloudFormation service role'
    Value: !GetAtt CloudFormationServiceRole.Arn
    Export:
      Name: !Sub '${AppName}-${Environment}-CloudFormationServiceRoleArn'
  
  CodeBuildServiceRoleArn:
    Description: 'ARN of the CodeBuild service role'
    Value: !GetAtt CodeBuildServiceRole.Arn
    Export:
      Name: !Sub '${AppName}-${Environment}-CodeBuildServiceRoleArn'
  
  LambdaExecutionRoleArn:
    Description: 'ARN of the Lambda execution role'
    Value: !GetAtt LambdaExecutionRole.Arn
    Export:
      Name: !Sub '${AppName}-${Environment}-LambdaExecutionRoleArn'
