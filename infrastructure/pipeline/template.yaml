AWSTemplateFormatVersion: '2010-09-09'
Description: 'CI/CD Pipeline for Game Collection App'

Parameters:
  AppName:
    Type: String
    Default: 'game-collection'
    Description: 'Application name used for naming resources'
  
  Environment:
    Type: String
    Default: 'dev'
    AllowedValues:
      - 'dev'
      - 'prod'
    Description: 'Environment (dev or prod)'
  
  RepositoryName:
    Type: String
    Default: 'claude-test'
    Description: 'GitHub repository name'
  
  RepositoryOwner:
    Type: String
    Default: 'Tatsuki-Yamada'
    Description: 'GitHub repository owner'
  
  GitHubOAuthToken:
    Type: String
    NoEcho: true
    Description: 'GitHub OAuth Token for CodePipeline'
  
  Branch:
    Type: String
    Default: 'main'
    Description: 'Repository branch to deploy'

Resources:
  # Deploy IAM Resources
  IAMStack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: './templates/iam.yaml'
      Parameters:
        AppName: !Ref AppName
        Environment: !Ref Environment
      TimeoutInMinutes: 10

  # Deploy S3 Resources
  S3Stack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: './templates/s3.yaml'
      Parameters:
        AppName: !Ref AppName
        Environment: !Ref Environment
      TimeoutInMinutes: 10

  # Deploy CodeBuild Resources
  CodeBuildStack:
    Type: 'AWS::CloudFormation::Stack'
    DependsOn:
      - IAMStack
    Properties:
      TemplateURL: './templates/codebuild.yaml'
      Parameters:
        AppName: !Ref AppName
        Environment: !Ref Environment
        CodeBuildServiceRoleArn: !GetAtt IAMStack.Outputs.CodeBuildServiceRoleArn
      TimeoutInMinutes: 10

  # Deploy Lambda Resources
  LambdaStack:
    Type: 'AWS::CloudFormation::Stack'
    DependsOn:
      - IAMStack
    Properties:
      TemplateURL: './templates/lambda.yaml'
      Parameters:
        AppName: !Ref AppName
        Environment: !Ref Environment
        LambdaExecutionRoleArn: !GetAtt IAMStack.Outputs.LambdaExecutionRoleArn
        FrontendStackName: !Sub '${AppName}-${Environment}-frontend-infra'
      TimeoutInMinutes: 10

  # CI/CD Pipeline
  GameCollectionPipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    DependsOn:
      - IAMStack
      - S3Stack
      - CodeBuildStack
      - LambdaStack
    Properties:
      Name: !Sub '${AppName}-${Environment}-pipeline'
      RoleArn: !GetAtt IAMStack.Outputs.CodePipelineServiceRoleArn
      ArtifactStore:
        Type: S3
        Location: !GetAtt S3Stack.Outputs.ArtifactsBucketName
      Stages:
        # Source Stage
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              Configuration:
                Owner: !Ref RepositoryOwner
                Repo: !Ref RepositoryName
                Branch: !Ref Branch
                OAuthToken: !Ref GitHubOAuthToken
              OutputArtifacts:
                - Name: SourceCode
        
        # Deploy Auth Stack
        - Name: DeployAuthStack
          Actions:
            - Name: DeployAuthStack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !GetAtt IAMStack.Outputs.CloudFormationServiceRoleArn
                StackName: !Sub '${AppName}-${Environment}-auth'
                TemplatePath: 'SourceCode::infrastructure/auth/template.yaml'
                TemplateConfiguration: 'SourceCode::infrastructure/auth/config.json'
                ParameterOverrides: !Sub |
                  {
                    "AppName": "${AppName}",
                    "Environment": "${Environment}"
                  }
                Capabilities: CAPABILITY_NAMED_IAM
              InputArtifacts:
                - Name: SourceCode
              RunOrder: 1
        
        # Deploy Storage Stack
        - Name: DeployStorageStack
          Actions:
            - Name: DeployStorageStack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !GetAtt IAMStack.Outputs.CloudFormationServiceRoleArn
                StackName: !Sub '${AppName}-${Environment}-storage'
                TemplatePath: 'SourceCode::infrastructure/storage/template.yaml'
                ParameterOverrides: !Sub |
                  {
                    "AppName": "${AppName}",
                    "Environment": "${Environment}"
                  }
                Capabilities: CAPABILITY_NAMED_IAM
              InputArtifacts:
                - Name: SourceCode
              RunOrder: 1
        
        # Deploy API Stack
        - Name: DeployAPIStack
          Actions:
            - Name: DeployAPIStack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !GetAtt IAMStack.Outputs.CloudFormationServiceRoleArn
                StackName: !Sub '${AppName}-${Environment}-api'
                TemplatePath: 'SourceCode::infrastructure/api/template.yaml'
                ParameterOverrides: !Sub |
                  {
                    "AppName": "${AppName}",
                    "Environment": "${Environment}"
                  }
                Capabilities: CAPABILITY_NAMED_IAM
              InputArtifacts:
                - Name: SourceCode
              RunOrder: 1
              
        # Deploy Frontend Infrastructure Stack
        - Name: DeployFrontendInfraStack
          Actions:
            - Name: DeployFrontendInfraStack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !GetAtt IAMStack.Outputs.CloudFormationServiceRoleArn
                StackName: !Sub '${AppName}-${Environment}-frontend-infra'
                TemplatePath: 'SourceCode::infrastructure/frontend/template.yaml'
                ParameterOverrides: !Sub |
                  {
                    "AppName": "${AppName}",
                    "Environment": "${Environment}"
                  }
                Capabilities: CAPABILITY_NAMED_IAM
              InputArtifacts:
                - Name: SourceCode
              RunOrder: 1
        
        # Build Frontend
        - Name: BuildFrontend
          Actions:
            - Name: BuildFrontend
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !GetAtt CodeBuildStack.Outputs.FrontendBuildProjectName
              InputArtifacts:
                - Name: SourceCode
              OutputArtifacts:
                - Name: BuildOutput
        
        # Deploy Frontend
        - Name: DeployFrontend
          Actions:
            - Name: DeployToS3
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: '1'
              Configuration:
                BucketName: !GetAtt S3Stack.Outputs.WebsiteBucketName
                Extract: true
              InputArtifacts:
                - Name: BuildOutput
            
            - Name: InvalidateCloudFrontCache
              ActionTypeId:
                Category: Invoke
                Owner: AWS
                Provider: Lambda
                Version: '1'
              Configuration:
                FunctionName: !GetAtt LambdaStack.Outputs.CloudFrontInvalidationFunctionName
              InputArtifacts:
                - Name: SourceCode
              RunOrder: 2

Outputs:
  PipelineURL:
    Description: 'URL to the CodePipeline console'
    Value: !Sub 'https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${GameCollectionPipeline}'
